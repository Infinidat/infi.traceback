[buildout]
prefer-final = false
newest = false
download-cache = .cache
develop = .
parts = 

[project]
name = infi.traceback
company = Infinidat
namespace_packages = ['infi']
install_requires = ['infi.exceptools',
	 'infi.pyutils',
	 'mock',
	 'nose']
version_file = src/infi/traceback/__version__.py
description = better tracebacks
long_description = Tracebacks in Python are missing some useful debugging information, such is locals() in each stack frame
	This module provides several mechanisms for better tracebacks:
	* traceback_context. A context that in patches standard's library traceback module to print better tracebacks
	* traceback_decorator. A decorator that calls the decorated method inside the traceback_context
	* Nose Plugin. The plugin, enabled with '--with-infi-traceback', prints a better traceback for errors and failures
	* pretty_traceback_and_exit_decorator. A decorator for console script entry points that prints exceptions and raises SystemExit
console_scripts = []
gui_scripts = []
package_data = []
upgrade_code = {7803de35-6770-11e1-b4bf-1093e90fe436}
product_name = ${project:name}
post_install_script_name = None
pre_uninstall_script_name = None

[isolated-python]
recipe = infi.recipe.python
version = v2.7.5.5

[setup.py]
recipe = infi.recipe.template.version
input = setup.in
output = setup.py

[__version__.py]
recipe = infi.recipe.template.version
output = ${project:version_file}
input = inline:
	__version__ = "${infi.recipe.template.version:version}"
	__git_commiter_name__ = "${infi.recipe.template.version:author}"
	__git_commiter_email__ = "${infi.recipe.template.version:author_email}"
	__git_branch__ = ${infi.recipe.template.version:git_local_branch}
	__git_remote_tracking_branch__ = ${infi.recipe.template.version:git_remote_tracking_branch}
	__git_remote_url__ = ${infi.recipe.template.version:git_remote_url}
	__git_head_hash__ = ${infi.recipe.template.version:head_hash}
	__git_head_subject__ = ${infi.recipe.template.version:head_subject}
	__git_head_message__ = ${infi.recipe.template.version:head_message}
	__git_dirty_diff__ = ${infi.recipe.template.version:dirty_diff}

[development-scripts]
dependent-scripts = true
recipe = infi.recipe.console_scripts
eggs = ${project:name}
	ipython
	nose
	mock
	coverage
	pylint
	infi.unittest
	infi.traceback
interpreter = python

[eclipse]
recipe = rbco.recipe.pyeclipse
project-name = ${project:name}
project-directory = ${buildout:directory}
python-version = 2.7
source-resources = ${buildout:directory}/src

[pydev]
recipe = pb.recipes.pydev
eggs = ${development-scripts:eggs}

[pack]
recipe = infi.recipe.application_packager

[sublime]
recipe = corneti.recipes.codeintel
eggs = ${development-scripts:eggs}

